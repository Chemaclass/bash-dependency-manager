#!/bin/bash

BASHDEP_DIR="lib"
BASHDEP_DEV_DIR="lib/dev"
BASHDEP_DEV_SUFFIX="@dev"
BASHDEP_SILENT=false

# Configure destination directories and silent mode.
#
# Usage:
#   bashdep::setup [dir=DIR] [dev-dir=DEV_DIR] [silent=true|false]
#
# Parameters:
#       dir    - Set the default destination directory.
#   dev-dir    - Set the development destination directory.
#   silent     - If true, no progress text will be shown during installation.
#
# Example:
#   bashdep::setup dir="vendor" dev-dir="src/dev" silent=true
function bashdep::setup() {
  for param in "$@"; do
    case $param in
      dir=*)       BASHDEP_DIR="${param#*=}"        ;;
      dev-dir=*)   BASHDEP_DEV_DIR="${param#*=}"    ;;
      silent=*)    BASHDEP_SILENT="${param#*=}"     ;;
      *)
        echo "Error: Invalid parameter '$param'"
        return 1
        ;;
    esac
  done
}

# Download and install all dependencies
function bashdep::install() {
  local dependencies=("$@")
  local url destination_dir

  for dep in "${dependencies[@]}"; do
    if [[ "$dep" == *"$BASHDEP_DEV_SUFFIX" ]]; then
      url="${dep%"$BASHDEP_DEV_SUFFIX"}"
      destination_dir="$BASHDEP_DEV_DIR"
    else
      url="$dep"
      destination_dir="$BASHDEP_DIR"
    fi

    bashdep::setup_directory "$destination_dir"
    bashdep::download_url "$url" "$destination_dir"
  done
}

# Ensure destination directory exists, and create it if missing
function bashdep::setup_directory() {
  local destination_dir=$1

  if [[ ! -d "$destination_dir" ]]; then
    mkdir -p "$destination_dir" || {
      echo "Error: Could not create directory '$destination_dir'. Exiting."
      exit 1
    }
  fi
}

# Download URL to the destination directory
function bashdep::download_url() {
  local url=$1
  local destination_dir=${2:-$BASHDEP_DIR}
  local file_name
  file_name=$(basename "$url")
  local destination_file="$destination_dir/$file_name"

  if ! bashdep::is_silent; then
    echo "Downloading '$file_name' to '$destination_dir'..."
  fi

  if curl -s -L "$url" -o "$destination_file"; then
    if ! bashdep::is_silent; then
      echo "> $file_name installed successfully in '$destination_dir'"
    fi
    chmod +x "$destination_file"
  else
    echo "Error: Failed to install $file_name from $url"
    return 1
  fi
}

function bashdep::is_silent() {
  [ "$BASHDEP_SILENT" == true ]
}
